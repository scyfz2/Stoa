<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoquan.mapper.nq1.LongarticleMapper" >
  <resultMap id="BaseResultMap" type="com.nuoquan.pojo.Longarticle" >
    <!--
      WARNING - @mbg.generated
    -->
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="sub_title" property="subTitle" jdbcType="VARCHAR" />
    <result column="cover_image" property="coverImage" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="original" property="original" jdbcType="INTEGER" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="dislike_num" property="dislikeNum" jdbcType="INTEGER" />
    <result column="comment_num" property="commentNum" jdbcType="INTEGER" />
    <result column="collect_num" property="collectNum" jdbcType="INTEGER" />
    <result column="reported_num" property="reportedNum" jdbcType="INTEGER" />
    <result column="popularity" property="popularity" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="is_anonymous" property="isAnonymous" jdbcType="TINYINT" />
    <result column="view_num" property="viewNum" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="is_jump" property="isJump" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>

  <update id="addLikeCount" parameterType="String">
    update nuoquan.longarticle set like_num=like_num+1 where id=#{articleId}
  </update>

  <update id="reduceLikeCount" parameterType="String">
    update nuoquan.longarticle set like_num=like_num-1 where id=#{articleId}
  </update>

  <update id="addCollectCount" parameterType="String">
    update nuoquan.longarticle set collect_num=collect_num+1 where id=#{articleId}
  </update>

  <update id="reduceCollectCount" parameterType="String">
    update nuoquan.longarticle set collect_num=collect_num-1 where id=#{articleId}
  </update>

  <update id="addCommentCount" parameterType="String">
    update nuoquan.longarticle set comment_num=comment_num+1 where id=#{articleId}
  </update>

  <update id="reduceCommentCount" parameterType="String">
    update nuoquan.longarticle set comment_num=comment_num-1 where id=#{articleId}
  </update>

  <update id="addViewCount" parameterType="String">
    update nuoquan.longarticle set view_num=view_num+1 where id=#{articleId}
  </update>

  <select id="queryReportedLongArticleByCreatTime" resultMap="BaseResultMap">
    select * from nuoquan.longarticle la where reported_num!=0 order by la.create_date desc
  </select>

  <select id="queryReportedLongArticleByReportedNum" resultMap="BaseResultMap">
    select * from nuoquan.longarticle la where reported_num!=0 order by la.reported_num desc
  </select>
</mapper>